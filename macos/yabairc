#!/bin/sh

# Load scripting addition.
# For this to work you must configure sudo such that
# it will be able to run the command without password.
# See dotfiles/macos/enable_sudo_for_yabai.sh
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa


# Global settings.
# layout bsp or float (default: bsp)
yabai -m config layout bsp

yabai -m config mouse_follows_focus          off
yabai -m config focus_follows_mouse          off

yabai -m config window_shadow                float


# Gaps and Margins.
GAP_SIZE=2
yabai -m config top_padding                  ${GAP_SIZE}
yabai -m config bottom_padding               ${GAP_SIZE}
yabai -m config left_padding                 ${GAP_SIZE}
yabai -m config right_padding                1 #${GAP_SIZE}
yabai -m config window_gap                   ${GAP_SIZE}

# set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier               fn
# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1                move
# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2                resize

# Keep the system preferences window floating.
yabai -m rule --add app="^System Settings$" manage=off
 


# We want to keep some spaces to have float layout where we can put non-tiliing
# windows.
# yabai -m space 1 --layout float
# yabai -m space 2 --layout float
# yabai -m space 3 --layout float
# yabai -m space 4 --layout float
# yabai -m space 5 --layout float
yabai -m space 6 --layout float
yabai -m space 7 --layout float
yabai -m space 8 --layout float
yabai -m space 9 --layout float
yabai -m space 10 --layout float

# ---- Experimental ---- #

# Creates a multiline variable on_space_changed
read -r -d '' on_space_changed <<- 'EOF'
  # echo "Current space is $YABAI_SPACE_ID"
EOF

# Attach a handler for space_changed event.
yabai -m signal --add event=space_changed action="$on_space_changed"





# for Yabai Indicator
yabai -m signal --add event=mission_control_exit action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_added action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=display_removed action='echo "refresh" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_created action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_destroyed action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_focused action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_moved action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_resized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_minimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'
yabai -m signal --add event=window_deminimized action='echo "refresh windows" | nc -U /tmp/yabai-indicator.socket'

